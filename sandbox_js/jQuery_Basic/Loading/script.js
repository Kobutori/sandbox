// jQuery発火タイミング


// 01.画面読み込み時に発火
$(function(){
    //読み込み時に動かしたいソースコードを記述
})


// 02.画面が読み込まれたあとに発火
$(window).on('load',function(){
    //画面が読み込まれたあとに動かしたいソースコードを記述
})


// 03.スクロールされたら発火
$(window).on('scroll',function(){
    // 画面がスクロールされたら動かしたいソースコードを記述
})


// 04.要素やクラス・ID名をクリックしたら発火
// ※スマホやタブレットで<a>タグ以外のものにクリックイベントを使いたい場合、タップする要素のcssに cursor:pointer;を指定しないと動作しない。
$('●●').on('click',function(){
    // クリックしたら動かしたいソースコードを記述
})


// 05.要素やクラス・IDにマウスが載ったり外れたりしたときに発火
// ※色の変更などシンプルな動きはcssのhoverを使えば実現できる
$('●●').on('mouseenter',function(){
    // マウスが載ったら動かしたいソースコードを記述
})
$('●●').on('mouseleave',function(){
    //マウスが外れたら動かしたいソースコードを記述
})



// 06.要素やクラス・ID名がタッチされたり外れたりしたら発火
$('●●').on('touchstart',function(){
    //タッチされたときに動かしたいソースコードを記述
})
$('●●').on('touchend',function(){
    //タッチして指が離れたときに動かしたいソースコードを記述
})
// スマホやタブレットの閲覧時にPCのhoverの見せ方を実現したいときなどに使用します。
// ・タッチが非対応なデバイスでは動作しない
// ・スマホやタブレット越rンジは、クリックイベントで指定したときと比較して、タッチイベントのほうが動作のレスポンスが早い
// ・同じ場所にクリックイベントとタッチイベント両方指定する場合、両方のイベントが発生するのでタッチイベントが利用できるか判定し、できないのであればクリックイベントに変更するといっった処理をjQueryで指定する必要がある。


// 07.マウスが移動したら発火
$(window).on('mousemove',function(){
    // マウスが移動したら動かしたいソースコードを記述
})

// 08.画面がリサイズされたら動く
$(window).on('resize',function(){
    //画面がリサイズされたら動かしたいソースコードを記述
})

// 09.要素やクラス・ID名画のCSSAnimationが終わったあとに発火
$('●●').on('animationend',function(){
    //CSSAnimationが終わったあとに動かしたいソースコードを記述
})

// 10.●秒送れて発火
setTimeout(function(){
    // 時間を遅らせて動かしたいソースコードを記述
}, 1000);
